{
  "swagger": "2.0",
  "info": {
    "description": "Property Pro Lite is a platform where people can create and/or search properties for sale or rent.",
    "version": "1.0.0",
    "title": "Property Pro Lite",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "jacquelinebinya@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  #"host": "https://property-pro-lite-jb.herokuapp.com/",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "property",
      "description": "Operations about property"
    }
  ],
  
    "schemes": [
    "https",
    "http"
  ],
  
  "securityDefinitions": {
  "JWT": {
    "type": "apiKey",
    "in": "header",
    "name": "x-auth-token"
    }
  },
  
  "paths": {
     "/auth/signup": {
    "post": {
      "summary": "Creates a new user.",
      "consumes": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "user",
          "schema": {
            "type": "object",
            "required": [
              "firstName",
              "lastName",
              "email",
              "password"
            ],
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              
              "email": {
                "type": "string",
                "format": "email"
              },
              
               "password": {
                "type": "string",
                "format": "password"
              },
            }
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Created"
        },
        
        "400":{
          "description": "Invalid input"
        }
      }
    }
  },
  
   "/auth/signin": {
    "post": {
      "summary": "Authenticates a registered user.",
      "consumes": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "user",
          "schema": {
            "type": "object",
            "required": [
              "email",
              "password"
            ],
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              
               "password": {
                "type": "string",
                "format": "password"
              },
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Authenticated"
        },
        
        "400":{
          "description": "Invalid input"
        }
      }
    }
  },
  
   "/property": {
    "post": {
       "security": [
    {
      "JWT": []
    }
  ],
      "tags": [
        "property"
      ],
      "summary": "A registered user post a property ad",
      "description": "",
      "operationId": "postAd",
      "produces": [
        "application/json"
      ],
      "consumes": [
        "multipart/form-data"
      ],
      "parameters": [
        {
          "name": "image",
          "in": "formData",
          "description": "Image of the property being advertised",
          "required": true,
          "type": "file"
        },
        
        {
          "name": "title",
          "in": "formData",
          "description": "Title of the property ad",
          "required": true,
          "type": "string"
        },
        
        {
          "name": "description",
          "in": "formData",
          "description": "Description of the property",
          "required": true,
          "type": "string"
        },
        
        {
          "name": "address",
          "in": "formData",
          "description": "Address of the property",
          "required": true,
          "type": "string"
        },
        
        {
          "name": "state",
          "in": "formData",
          "description": "State in which property is found.",
          "required": true,
          "type": "string"
        },
        
        {
          "name": "city",
          "in": "formData",
          "description": "City in which the property is found",
          "required": true,
          "type": "string"
        },
        
         {
          "name": "type",
          "in": "formData",
          "description": "Type of the property being advertised",
          "required": true,
          "type": "string"
        },
        
        {
          "name": "price",
          "in": "formData",
          "description": "Price of the property being dvertised",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description":"Property ad created successfully"
        },
        "400": {
          "description": "Empty input fields."
        },
         "401": {
          "description": "Access denied no token"
        },
      }
    }
  },
  
   "/property/<:property-id>": {
    "delete": {
       "security": [
    {
      "JWT": []
    }
  ],
      "tags": [
        "property"
      ],
      "summary": "A registered user deletes a property ad",
      "description": "",
      "operationId": "deleteAd",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "ID of pet that needs to be fetched",
          "required": true,
          "type": "integer",
        },
        ],
      "responses": {
        "200": {
          "description":"Property ad deleted successfully"
        },
        "404": {
          "description":"Property ad not found"
        },
        
      }
    }
  },
  
  "/property/": {
    "get": {
      "tags": [
        "property"
      ],
      "summary": "A user gets a property ads",
      "operationId": "getAds",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description":"Operation successfull"
        },
      }
    }
  },
  
   "/property/<:property-id>/specific-property":{
    "get": {
      "tags": [
        "property"
      ],
     
      "summary": "A user gets a property ads",
      "operationId": "getSpecificId",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "ID of pet that needs to be fetched",
          "required": true,
          "type": "integer",
        },
        ],
      "responses": {
        "200": {
          "description":"Operation successfull",
        },
        "404": {
          "description":"Not found"
        },
      }
    }
  },
  
  "/property/type":{
    "get": {
      "tags": [
        "property"
      ],
     
      "summary": "A user gets a property ads",
      "operationId": "getAdsByType",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "propertyType",
          "in": "query",
          "description": "Type of property that needs to be fetched",
          "required": true,
          "type": "integer",
        },
        ],
      "responses": {
        "200": {
          "description":"Operation successfull",
        },
        "404": {
          "description":"Not found"
        },
      }
    }
  },
  
  
   "/property/<:property-id>/":{
    "patch": {
       "security": [
    {
      "JWT": []
    }
  ],
      "tags": [
        "property"
      ],
     
      "summary": "A user gets a property ads",
      "operationId": "editSpecificAd",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "ID of pet that needs to be fetched",
          "required": true,
          "type": "integer",
        },
        {
          "in": "body",
          "name": "property",
          "schema": {
            "type": "object",
            "required": [
              "title",
              "description",
              "address",
              "city",
              "type",
              "price",
              "state"
            ],
            "properties": {
            "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              
              "address": {
                "type": "string",
              },
              
               "city": {
                "type": "string",
              },
              "type": {
                "type": "string",
              },
              "price": {
                "type": "string",
              },
               "state": {
                "type": "string",
              },
            }
          }
        }

        ],
      "responses": {
        "200": {
          "description":"Operation successfull",
        },
        "400": {
          "description":"Invalid input"
        },
        "404": {
          "description":"Not found"
        },
      }
    }
  },
  
   "/property/<:property-id>/sold":{
    "patch": {
       "security": [
    {
      "JWT": []
    }
  ],
      "tags": [
        "property"
      ],
     
      "summary": "A user marks ad sold",
      "operationId": "markAdSold",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "ID of pet that needs to be fetched",
          "required": true,
          "type": "integer",
        },
       
        ],
      "responses": {
        "200": {
          "description":"Operation successfull",
        },
        "404": {
          "description":"Not found"
        },
      }
    }
  },
  
  
  } 
}